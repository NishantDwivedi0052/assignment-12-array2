Q1 Count the number of elements strictly greater than x.
ANS - #include<iostream>
      using namespace std;
      int main(){
          int n;
          cout<<"Enter array size : ";
          cin>>n;
          int arr[n];
          cout<<"Enter array element : "<<endl;
          for(int i=0;i<n;i++){
              cin>>arr[i];
          }
          int x;
          cout<<"Enter x : ";
          cin>>x;
          int count = 0;
          for(int i=0;i<n;i++){
              if(arr[i]>x) count++;
          }
          cout<<count;
      }
OUTPUT -  Enter array size : 5
          Enter array element : 5 6 9 8 7
          Enter x : 6
          3

Q2 WAP to find the largest three elements in the array.
ANS - #include<iostream>
      #include<climits>
      using namespace std;
      int main(){
          int n;
          cout<<"Enter array size : ";
          cin>>n;
          int arr[n];
          cout<<"Enter array elements : "<<endl;
          for(int i=0;i<n;i++){
              cin>>arr[i];
      
          }
          int mx = INT_MIN;
          int smx = INT_MIN;
          int tmx = INT_MIN;
      
          for(int i=0;i<n;i++){
              if(arr[i]>mx)
              mx = arr[i];
          }
      
          for(int i=0;i<n;i++){
              if(arr[i]>smx && arr[i]!=mx)
              smx = arr[i];
          }
      
          for(int i=0;i<n;i++){
              if(arr[i]>tmx && arr[i]!=mx && arr[i]!=smx)
              tmx = arr[i];
          }
          cout<<mx<<endl;
          cout<<smx<<endl;
          cout<<tmx<<endl;
      
      }
OUTPUT- Enter array size : 6
        Enter array elements :
        8 11 52 6 14 12 
        52
        14
        12

Q3 Check if the given array is sorted or not.
ANS-#include<iostream>
    #include<climits>
    using namespace std;
    int main(){
        int n;
        cout<<"Enter array size : ";
        cin>>n;
        int arr[n];
        cout<<"Enter array elements : "<<endl;
        for(int i=0;i<n;i++){
            cin>>arr[i];
    
        }
        bool flag = true; // true means sorted
        for(int i=0;i<n-1;i++){
            if(arr[i]>arr[i+1]){
                flag = false; // false means unsorted
                break;
            }
        }
        if(flag ==true) cout<<"Array is sorted";
        else cout<<"Array is unsorted";
    
    }
OUTPUT -   Enter array size : 6   
           Enter array elements :
           1 2 3 4 5 6 
           Array is sorted

Q4 Find the difference between the sum of elements at even indices to the sum of elements at odd indices.
ANS-  #include<iostream>
      using namespace std;
      int main(){
          int n;
          cout<<"Enter array size : ";
          cin>>n;
          int arr[n];
          cout<<"Enter array elements : "<<endl;
          for(int i=0;i<n;i++){
              cin>>arr[i];
      
          }
          int sumEven = 0;
          int sumOdd = 0;
          for(int i=0;i<n;i++){
              (i%2==0) ? sumEven += arr[i] : sumOdd  += arr[i];
          }
          cout<<sumEven-sumOdd;
      }
OUTPUT- Enter array size : 6
        Enter array elements :
         1 2 3 6 5 4
        -3

Q5 Given an array of integers, change the value of all odd indexed elements to its second multiple and increment all even indexed values by 10.
ANS - #include<iostream>
      using namespace std;
      int main(){
          int arr[] = {1,2,3,6,5,4};
          int n = sizeof(arr)/4;
          // printing array
          for(int i=0;i<n;i++){
              cout<<arr[i]<<" ";
          }
          cout<<endl;
          // changing array 
      
          for(int i=0;i<n;i++){
              if(i%2!=0) arr[i] *= 2;
              else arr[i] += 10;
              // cout<<arr[i]<<" ";
          }
          // printing array
      
          for(int i=0;i<n;i++){
              cout<<arr[i]<<" ";
          }
      }
OUTPUT - 1 2 3 6 5 4 
        11 4 13 12 15 8

Q6 Find the unique number in a given Array where all the elements are being repeated twice with one value being unique.
ANS - #include<iostream>
      using namespace std;
      int main(){
          int arr[] = {1,2,1,4,2,6,4,5,5};
          int n = sizeof(arr)/4;
          for(int i=0;i<n;i++){
              bool flag = true; // true means unique
              for(int j=0;j<n;j++){
                  if(j==i) continue;
                  if(arr[i]==arr[j]){ // not unique
                      flag = false;
                      break;
                  }
              }
              if(flag == true){ // arr[i] is unique
                  cout<<arr[i]<<endl;
                  break; 
              }
          }
      }
OUTPUT - 6

Q7 If an array arr contains n elements, then check if the given array is a palindrome or not.
ANS - #include<iostream>
      using namespace std;
      int main(){
          int arr[] = {1,2,3,4,5,4,3,2,1};
          int n = sizeof(arr)/4;
          int i=0;
          int j=n-1;
          bool flag = true; // true -> palindrome
          while(i<j){
              if(arr[i]!= arr[j]){
                  flag = false; // false -> not palindrome
                  break;
              }
              i++;
              j--;
          }
          if(flag == true){
              cout<<"Array is palindrome";
          }
          else{
              cout<<"Array is not palindrome";
          }
      }
OUTPUT - Array is palindrome

Q8 Find the error.
    double getAverage(int arr[], int size);
    int main () {
      int balance[5] = {1000, 2, 3, 17, 50};
      double avg;
      avg = getAverage( balance[0], 5 ) ;
      cout << "Average value is: " << avg << endl;
      return 0;
    }
OUTPUT - FUNCTION IS ERROR.
         (The getAverage function expects an array (int arr[]), but youâ€™re passing a single integer (balance[0]).
